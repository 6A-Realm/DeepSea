name: BuildRelease

on:
  push:
    branches:
      - master
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      
    - id: set-version
      run: |
        version=$(cat ./VERSION | python -c 'import sys, json; f=open("./VERSION");print(json.loads(f.read())["buildVersion"])')
        echo "::set-output name=version::$version"
        
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8.3

    - name: Install dependencies
      run: |
        if [ -f ./builder/requirements.txt ]; then pip3 install -r ./builder/requirements.txt; fi
        
    - name: Create config script
      env:
        gitPass: ${{ secrets.SLX_GIT_PASS }}
        gitToken: ${{ secrets.SLX_GIT_TOKEN }}
        gitUser: ${{ secrets.SLX_GIT_USER }}
      run: | 
        echo -e "github_username = '$gitUser'\ngithub_password = '$gitPass'\ngitlab_private_access_token = '$gitToken'"> ./builder/config.py
    
    - name: Compile DeepSea Zip
      run: |
        python ./autobuild.py

    - name: Create Release
      run: |
        set -x
        assets=()
        for asset in ./builder/*.zip; do
          assets+=("-a" "$asset")
        done
        tag_name=$(cat ./release_body.txt)
        hub release create "${assets[@]}" -d -m "$tag_name" "v${{ steps.set-version.outputs.version }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}